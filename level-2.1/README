Lovely Lucky LAMBs
===================

There are 4 key rules which you must follow in order to avoid a revolt:

    1. The most junior henchman (with the least seniority) gets exactly 1 LAMB.  
		(There will always be at least 1 henchman on a team.)

    2. A henchman will revolt if:
		The person who ranks immediately above them gets more than double the number of LAMBs they do.
    
	3. A henchman will revolt if 
		The amount of LAMBs given to their next two subordinates combined is more than the number of LAMBs they get.  
		(Note that the two most junior henchmen won't have two subordinates, so this rule doesn't apply to them.  
		The 2nd most junior henchman would require at least as many LAMBs as the most junior henchman.)

    4. You can always find more henchmen to pay - the Commander has plenty of employees.  
		If there are enough LAMBs left over such that another henchman could be added,
		As the most senior while obeying the other rules, you must always add and pay that henchman.

For instance, 

	if you had 10 LAMBs and were as generous as possible, 
		you could only pay 3 henchmen (1, 2, and 4 LAMBs, in order of ascending seniority), 

	whereas if you were as stingy as possible, 
		you could pay 4 henchmen (1, 1, 2, and 3 LAMBs). 

Therefore, solution(10) should return 4-3 = 1.

To keep things interesting, Commander Lambda varies the sizes of the Lucky LAMB payouts. 
You can expect total_lambs to always be a positive integer less than 1 billion (10 ^ 9).

Test cases
==========

-- Python cases --

Input:
solution.solution(143)
Output:
    3

Input:
solution.solution(10)
Output:
    1

